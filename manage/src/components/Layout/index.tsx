'use client';
import React,{ ReactNode, useEffect, useState }from 'react'
import { DownOutlined } from '@ant-design/icons';
import type { MenuProps } from 'antd';
import { Layout as AntdLayout, Menu, theme,Dropdown, Space, message } from 'antd';
import style from "./index.module.css"
import {usePathname, useRouter} from 'next/navigation';
import Head from 'next/head';
import Link from 'next/link';
import { USER_ROLE } from '@/constant/user';
import { ItemType, MenuItemType } from 'antd/es/menu/hooks/useItems';
import  '../../font/iconfont.css'


const { Header, Content, Sider } = AntdLayout;

var ITEM: ItemType<MenuItemType>[] | undefined=[]





export default function Layout({children}:{children:ReactNode}) {
  
  const router = useRouter()
  const [user,setUser] = useState({info:{nickName:""}})
  
  const role=localStorage.getItem("user")?JSON.parse(localStorage.getItem("user")||'null').info.role:''

  useEffect(()=>{
    if (role===USER_ROLE.SELLER) {
      ITEM=[
        {
          key: `goods`,
          icon: React.createElement('div',{className:'iconfont icon-shangpin-'}) ,
          label: `商品管理`,
      
          children: [{label:"商品列表",key:'/goods',icon:React.createElement('div',{className:'iconfont icon-shangpinliebiao'})},
                    {label:"商品添加",key:'/goods/add',icon:React.createElement('div',{className:'iconfont icon-add-line'})},],
        },
        {
          key: `store`,
          icon: React.createElement('div',{className:'iconfont icon-dianpu'}),
          label: `店铺管理`,
      
          children: [{label:"店铺列表",key:'/store',icon:React.createElement('div',{className:'iconfont icon-shangpinliebiao'})},
                    {label:"订单列表",key:'/store/order',icon:React.createElement('div',{className:'iconfont icon-add-line'})},
                   ],
        },
      ]
    }else{
      ITEM=[
        {
          key: `log`,
          icon: React.createElement('div',{className:'iconfont icon-rizhi'}),
          label: `日志管理`,
      
          children: [{label:"日志列表",key:'/log',icon:React.createElement('div',{className:'iconfont icon-shangpinliebiao'})},
                    {label:"日志添加",key:'/log/add',icon:React.createElement('div',{className:'iconfont icon-add-line'})},],
        },
        {
          key: `category`,
          icon: React.createElement('div',{className:'iconfont icon-fenlei'}),
          label: `分类管理`,
      
          children: [{label:"分类列表",key:'/category',icon:React.createElement('div',{className:'iconfont icon-shangpinliebiao'})},
                    {label:"分类添加",key:'/category/add',icon:React.createElement('div',{className:'iconfont icon-add-line'})},],
        },
        {
          key: `user`,
          icon: React.createElement('div',{className:'iconfont icon-yonghu'}),
          label: `用户管理`,
      
          children: [{label:"用户列表",key:'/user',icon:React.createElement('div',{className:'iconfont icon-shangpinliebiao'})},
                    {label:"用户添加",key:'/user/add',icon:React.createElement('div',{className:'iconfont icon-add-line'})},],
        },
    
      ]
    }
  },[])

  const USER_ITEMS: MenuProps['items'] = [
    {
      key: '1',
      label: <Link href="/user/edit/id">用户中心</Link>,
      icon:React.createElement('div',{className:'iconfont icon-yonghu'}) 
    },
    {
      key: '2',
      label: <span onClick={async ()=>{
        // await logout()
        localStorage?.removeItem("user")
        message.success("登出成功")
        router.push("/login")
      }}>退出</span>,
      icon:React.createElement('div',{className:'iconfont icon-tuichudenglu'})
    },
  ];
  

  const handleMenuClick:MenuProps['onClick']=({key})=>{
    router.push(key)
  }

  
  const activeMenu=usePathname()
  // console.log(activeMenu);

  useEffect(()=>{
     if (typeof window !== 'undefined') {
      const userStorage = localStorage?.getItem("user");
      if (userStorage) {
        setUser(JSON.parse(userStorage));
      }
    }
  },[])

 
  
  

  return  <>
  <Head>
    <title>Create Next App</title>
    <meta name='description' content='Generated by create next app' />
    <meta name='viewport' content='width=device-width, initial-scale=1'/>
    <link rel="icon" href="/favicon.ico" />
  </Head>
  <AntdLayout
          className={style.sectionInner}>
  <Header style={{ display: 'flex', alignItems: 'center' }}>
    <div className={style.logo} >商城后台管理系统</div>
    
    
    <Menu
      theme="dark"
      mode="horizontal"
      defaultSelectedKeys={['2']}
      items={[]}
      style={{ flex: 1, minWidth: 0 }}
    />
    <span className={style.userinfo}>
      <Dropdown menu={{items:USER_ITEMS}}>
          <a onClick={(e) => e.preventDefault()}>
            <Space>
              { user?.info?.nickName? user?.info?.nickName : "用户名" } 
              <DownOutlined/>
            </Space>
          </a>
      </Dropdown>
    </span>
  </Header>
  <Content >
    
    <AntdLayout
      className={style.sectionContent}
    >
      <Sider
        style={{background:'#fff'}}>
        <Menu
          mode="inline"
          defaultSelectedKeys={[role===USER_ROLE.SELLER?'/goods':'/log']}
          defaultOpenKeys={[role===USER_ROLE.SELLER?'/goods':'/log']}
          selectedKeys={[activeMenu]}
          style={{ height: '100vh'}}
          items={ITEM}
          onClick={handleMenuClick}
        />
      </Sider>
      <Content className={style.content}>{children}</Content>
    </AntdLayout>
  </Content>
</AntdLayout>
  </>
}
